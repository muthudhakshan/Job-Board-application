{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\DemoProject\\\\client\\\\src\\\\components\\\\JobBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './job.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobBoard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [newJobTitle, setNewJobTitle] = useState('');\n  const [newJobDescription, setNewJobDescription] = useState('');\n  const [editingJob, setEditingJob] = useState(null);\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/jobs');\n      setJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n  const handleAddJob = async () => {\n    try {\n      const newJob = {\n        title: newJobTitle,\n        description: newJobDescription\n      };\n      const response = await axios.post('http://localhost:5000/api/jobs', newJob);\n      alert(\"Job added successfully\");\n      setJobs([...jobs, response.data]);\n      setNewJobTitle('');\n      setNewJobDescription('');\n    } catch (error) {\n      console.error('Error adding job:', error);\n    }\n  };\n  const handleDeleteJob = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/jobs/${id}`);\n      setJobs(jobs.filter(job => job._id !== id));\n    } catch (error) {\n      console.error('Error deleting job:', error);\n    }\n  };\n  const handleEditJob = job => {\n    setEditingJob(job);\n    setNewJobTitle(job.title);\n    setNewJobDescription(job.description);\n  };\n  const handleUpdateJob = async () => {\n    try {\n      const updatedJob = {\n        ...editingJob,\n        title: newJobTitle,\n        description: newJobDescription\n      };\n      const response = await axios.put(`http://localhost:5000/api/jobs/${editingJob._id}`, updatedJob);\n      setJobs(jobs.map(job => job._id === editingJob._id ? response.data : job));\n      setEditingJob(null);\n      setNewJobTitle('');\n      setNewJobDescription('');\n      alert(\"Job updated successfully\");\n    } catch (error) {\n      console.error('Error updating job:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JOB \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add a Job \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"labe\", {\n        children: \"Job Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newJobTitle,\n        onChange: e => setNewJobTitle(e.target.value),\n        placeholder: \"Enter job title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newJobDescription,\n        onChange: e => setNewJobDescription(e.target.value),\n        placeholder: \"Enter job description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }, this), editingJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateJob,\n        children: \"Update Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddJob,\n        children: \"Add Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditJob(job),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteJob(job._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(JobBoard, \"/gdb+Wl2cfVGka55/PQUFteh/lg=\");\n_c = JobBoard;\nexport default JobBoard;\nvar _c;\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","JobBoard","_s","jobs","setJobs","newJobTitle","setNewJobTitle","newJobDescription","setNewJobDescription","editingJob","setEditingJob","fetchJobs","response","get","data","error","console","handleAddJob","newJob","title","description","post","alert","handleDeleteJob","id","delete","filter","job","_id","handleEditJob","handleUpdateJob","updatedJob","put","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Desktop/DemoProject/client/src/components/JobBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './job.css';\n\nconst JobBoard = () => {\n    const [jobs, setJobs] = useState([]);\n    const [newJobTitle, setNewJobTitle] = useState('');\n    const [newJobDescription, setNewJobDescription] = useState('');\n    const [editingJob, setEditingJob] = useState(null);\n\n    useEffect(() => {\n        fetchJobs();\n    }, []);\n\n    const fetchJobs = async () => {\n        try {\n            const response = await axios.get('http://localhost:5000/api/jobs');\n            setJobs(response.data);\n        } catch (error) {\n            console.error('Error fetching jobs:', error);\n        }\n    };\n\n    const handleAddJob = async () => {\n        try {\n            const newJob = { title: newJobTitle, description: newJobDescription };\n            const response = await axios.post('http://localhost:5000/api/jobs', newJob);\n            alert(\"Job added successfully\");\n            setJobs([...jobs, response.data]);\n            setNewJobTitle('');\n            setNewJobDescription('');\n        } catch (error) {\n            console.error('Error adding job:', error);\n        }\n    };\n\n    const handleDeleteJob = async (id) => {\n        try {\n            await axios.delete(`http://localhost:5000/api/jobs/${id}`);\n            setJobs(jobs.filter(job => job._id !== id));\n        } catch (error) {\n            console.error('Error deleting job:', error);\n        }\n    };\n\n    const handleEditJob = (job) => {\n        setEditingJob(job);\n        setNewJobTitle(job.title);\n        setNewJobDescription(job.description);\n    };\n\n    const handleUpdateJob = async () => {\n        try {\n            const updatedJob = { ...editingJob, title: newJobTitle, description: newJobDescription };\n            const response = await axios.put(`http://localhost:5000/api/jobs/${editingJob._id}`, updatedJob);\n            setJobs(jobs.map(job => (job._id === editingJob._id ? response.data : job)));\n            setEditingJob(null);\n            setNewJobTitle('');\n            setNewJobDescription('');\n            alert(\"Job updated successfully\");\n        } catch (error) {\n            console.error('Error updating job:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>JOB </h1>\n            <div className='form'>\n            <h1>Add a Job </h1>\n            <labe>Job Title</labe><br></br>\n                <input\n                    type=\"text\"\n                    value={newJobTitle}\n                    onChange={(e) => setNewJobTitle(e.target.value)}\n                    placeholder=\"Enter job title\"\n                /><br></br>\n                <label>Description</label><br></br>\n                <textarea\n                    value={newJobDescription}\n                    onChange={(e) => setNewJobDescription(e.target.value)}\n                    placeholder=\"Enter job description\"\n                ></textarea><br></br>\n                {editingJob ? (\n                    <button onClick={handleUpdateJob}>Update Job</button>\n                ) : (\n                    <button onClick={handleAddJob}>Add Job</button>\n                )}\n            </div>\n            <div className=\"results\">\n                {jobs.map(job => (\n                    <div className='result' key={job._id}>\n                        <h2>{job.title}</h2>\n                        <p>{job.description}</p>\n                        <button onClick={() => handleEditJob(job)}>Edit</button>\n                        <button onClick={() => handleDeleteJob(job._id)}>Delete</button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default JobBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}